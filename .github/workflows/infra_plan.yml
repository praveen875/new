### Reusable workflow to plan terraform deployment, create artifact and upload to workflow artifacts for consumption ###
name: "Terraform Plan Workflow"
on:
  push:
   branches:
     - "dev"
      

jobs:
  build-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        
      - name: Find Modified Files in PR
        timeout-minutes: 1
        run: |
         REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $2}'); OWNER=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $1}'); PULL_REQ_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH); HAS_NEXT_PAGE=true; AFTER_CURSOR=""; MODIFIED_TFENV_DIR=""; MODIFIED_TFSCRIPTS=""
         echo $GITHUB_REPOSITORY
         echo $REPO_NAME
         echo $OWNER
         echo $GITHUB_EVENT_PATH
         echo $PULL_REQ_NUMBER
         GRAPHQL_RESPONSE=$(curl -L \
         -H "Accept: application/vnd.github+json" \
         -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}'" \
         -H "X-GitHub-Api-Version: 2022-11-28" \
         https://api.github.com/repos/praveen875/new/pulls )
         echo $GRAPHQL_RESPONSE
        
         
        


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Initialize Terraform
        run: |
          cd terraform/${{ matrix.path }}
          terraform init -input=false
      
      - name: Terraform Validate
        id: validate
        run: |
          cd terraform/${{ matrix.path }}
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform/${{ matrix.path }}
          echo "+Current Directory"
          pwd
          ls -l
          terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
